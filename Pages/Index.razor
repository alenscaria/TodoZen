@page "/"
@using TODO_Blazer.Models
@using TODO_Blazer.Data
@inject TodoService todoService
@inject IJSRuntime JsRunTime


<PageTitle>ToDoZen</PageTitle>

<div class="inputpanel col d-flex justify-content-center mt-5">
<input type="text" class="col-5 p-2" placeholder="Enter Todos..." @bind="Todo.TodoItem" @onkeypress="@AddTodoOnEnter">
<button type="button" class="button-blue ms-3 fw-bolder" @onclick="AddTodo"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
</svg></button>
</div>

<div class="card mt-5 p-4" style="max-height: 300px; overflow-y:auto">
    <h3 class="text-white bg-secondary text-center mb-3" style="width: 820px;">Todos</h3>
    <table>
    @foreach (var todo in TodoObj)
    {
        
           
            <tr> 
                 @if(todo.IsCompleted)
            {
                <td><s>@todo.TodoItem</s></td>
                 <td><a class="button-red btn-sm mb-2" @onclick="()=>DeleteTodo(todo)"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
  <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5ZM11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H2.506a.58.58 0 0 0-.01 0H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1h-.995a.59.59 0 0 0-.01 0H11Zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5h9.916Zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47ZM8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5Z"/>
</svg></a></td>
                <td><button class="button-blue btn-sm mb-2" @onclick="() => NotDone(todo)"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-counterclockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2v1z"/>
  <path d="M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466z"/>
</svg></button></td>
            
               

            }
            else
            {
                <td style="">@todo.TodoItem</td>
                 <td><a class="button-blue btn-sm mb-2" href="EditTodo/@todo.TodoCount"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
  <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
  <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
</svg></a></td>
                <td><button class="button-green btn-sm mb-2" @onclick="() => MarkAsDone(todo)">✔</button></td>

            }
                 </tr>

          
        
        
    }
    </table>
</div>


@code
{

    Todo Todo = new Todo();

     List<Todo> TodoObj=new List<Todo>();

protected override async Task OnInitializedAsync()
{
    TodoObj = await todoService.GetAllTodos();    
   
}

    protected async Task AddTodo()
    {
 try {

            // Call the service method to insert the department.
            await todoService.AddTodo(Todo);
            await JsRunTime.InvokeVoidAsync("alert","New Todo is Added Successfully.");
            Todo =new Todo();
            await OnInitializedAsync();


           
            
            // Redirect to the department list page.
        } catch (Exception ex) {
        }
        }

        protected async Task AddTodoOnEnter(KeyboardEventArgs e)
{

    if ((e.Code == "Enter" || e.Code == "NumpadEnter") && !string.IsNullOrEmpty(Todo.TodoItem))
    {
     await AddTodo();
    }
}

 protected async Task MarkAsDone(Todo todo)
    {
       
        todo.IsCompleted=!todo.IsCompleted;
        await todoService.UpdateTodo(todo);
        
        }
         protected async Task DeleteTodo(Todo todo)
    {
        await todoService.DeleteTodo(todo);
                    await JsRunTime.InvokeVoidAsync("alert","Todo Deleted Successfully.");
            Todo =new Todo();
            await OnInitializedAsync();


        }
 protected async Task NotDone(Todo todo)
    {
        todo.IsCompleted=!todo.IsCompleted;
        await todoService.UpdateTodo(todo);
        }
}